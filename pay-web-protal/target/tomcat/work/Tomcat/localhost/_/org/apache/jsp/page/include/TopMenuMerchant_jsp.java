/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-12-24 11:18:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.page.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class TopMenuMerchant_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/page/include/headUrl.jsp", Long.valueOf(1513353094821L));
    _jspx_dependants.put("/page/include/taglib.jsp", Long.valueOf(1513353094826L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');

	/** 对变量 path 的定义 */
	//是否采用https
	ServletContext context = this.getServletContext();
 	final boolean supportHttps = Boolean.parseBoolean(context.getAttribute("IS_SSL") + "");
	//是否 是 域名 + 应用名 
	final boolean is_use_app_name = Boolean.parseBoolean(context.getAttribute("IS_USE_DOMAIN_NAME") + "");
	final String serverName = request.getServerName();
	String path = "";
	if ("localhost".equals(serverName)) {
		// 本地调试时使用
		path = request.getContextPath();
	} else {
		if (supportHttps) {
			path = "https://" + serverName;
		} else {
			if (is_use_app_name) {
				path = "http://" + serverName + request.getContextPath();
			} else {
				path = "http://" + serverName +":"+request.getServerPort() + request.getContextPath();
			}
		}

	}
	
	/**JSP 禁用缓存 */
	response.setHeader("Pragma","No-cache");  
	response.setHeader("Cache-Control","no-cache");
	response.setDateHeader("Expires", 0);

      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t$(function () {\r\n");
      out.write("\t\t\t    navSlide();\r\n");
      out.write("\t\t\t\t$(\"#dropmeun select\").change(function () {\r\n");
      out.write("\t\t\t\t\tvar url = $(this).val();\r\n");
      out.write("\t\t\t\t\tlocation.href = url;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t//点击导航栏，列出菜单。\r\n");
      out.write("\t\t\tfunction changePageType(FirstClassName, SeconClassName) {\r\n");
      out.write("\t\t\t    if(typeof(SeconClassName)=='undefined'){\r\n");
      out.write("\t\t\t      $(FirstClassName).siblings().removeClass('active');\r\n");
      out.write("\t\t\t      $(FirstClassName).addClass('active');\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    /*一级菜单状态*/\r\n");
      out.write("\t\t\t    else{\r\n");
      out.write("\t\t\t    $(FirstClassName).siblings().find('a').removeClass('active');\r\n");
      out.write("\t\t\t    $(FirstClassName).find('a').addClass('active');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t    /*二级菜单状态*/\r\n");
      out.write("\t\t\t    $(SeconClassName).siblings().find('a').removeClass('active');\r\n");
      out.write("\r\n");
      out.write("\t\t\t    /*二级菜单显示和隐藏*/\r\n");
      out.write("\t\t\t    $(SeconClassName).parents(\"div\").addClass('block');\r\n");
      out.write("\t\t\t    $(SeconClassName).parents(\"div\").siblings().removeClass('block');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t    /*滑动条状态*/\r\n");
      out.write("\t\t\t    $(FirstClassName).siblings().find('a').removeClass('current');\r\n");
      out.write("\t\t\t    $(FirstClassName).find('a').addClass('current');\r\n");
      out.write("\r\n");
      out.write("\t\t\t    $(\".nav-current\").css('display', 'block');\r\n");
      out.write("\t\t\t    var itemW = $(\".nav\").find('.current').innerWidth(); //默认当前位置宽度\r\n");
      out.write("\t\t\t    var defLeftW = $(\".nav\").find('.current').position().left;  //默认当前位置Left值\r\n");
      out.write("\t\t\t    //添加默认下划线\r\n");
      out.write("\t\t\t    $(\".nav-current\").css({ width: itemW, left: defLeftW });\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t<div class=\"header\">\r\n");
      out.write("\t\t\t<div class=\"headerContent\">\r\n");
      out.write("\t\t\t\t<div class=\"notice\">\r\n");
      out.write("\t\t\t\t\t<span class=\"noticeTitle\">\r\n");
      out.write("\t\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userOperator.loginName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("，欢迎登录");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${COMPANY_FOR}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("支付平台 </span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"links\">\r\n");
      out.write("\t\t\t\t\t<a href=\"login_loginout.action\">退出 </a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t <div class=\"nav100\">\r\n");
      out.write("        <div class=\"nav\">\r\n");
      out.write("            <ul>\r\n");
      out.write("             <!-- <li class=\"nav-logo\"></li> -->\r\n");
      out.write("             \t<li style=\"width:159px; height:78px; background:url('");
      out.print(path );
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${COMPANY_LOGO }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("') no-repeat; background-position:50%;\"></li>\r\n");
      out.write("                <li class=\"mer-account \"><a onclick=\"changePageType('.mer-account', '.account ');\" class=\"current\">我的账户</a></li>\r\n");
      out.write("             \t<li class=\"mer-receivable\"><a onclick=\"changePageType('.mer-receivable', '.receivable ');\">我的收款</a></li>\r\n");
      out.write("              \t<li class=\"mer-pay\"><a onclick=\"changePageType('.mer-pay', '.payment ');\" >我的付款</a></li>\r\n");
      out.write("                <li class=\"mer-security\"><a onclick=\"changePageType('.mer-security', '.mer-security-info');\">安全中心</a></li>\r\n");
      out.write("                <li class=\"mer-system\"><a onclick=\"changePageType('.mer-system', '.system');\" >系统管理</a></li>\r\n");
      out.write("                <li class=\"mer-publicinfo\"><a onclick=\"changePageType('.mer-publicinfo', '.publicinfo');\" >公共信息</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("            <div class=\"nav-current\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"subnav100\">\r\n");
      out.write("         <!-- 我的账户 -->\r\n");
      out.write("            <div class=\"subnav block\">\r\n");
      out.write("                <ul><li class=\"account\"></li>\r\n");
      out.write("                    <li class=\" mer-account-info \"><a href=\"merchantaccount_viewAccount.action\">账户信息</a></li>\r\n");
      out.write("                    <li class=\" mer-account-bsinfo\"><a href=\"merchantinfo_viewMerchant.action\">基本信息</a> </li>\r\n");
      out.write("                    <li class=\" mer-account-bsinfo\"><a href=\"merchantinfo_viewMerchantCheck.action\">实名认证</a> </li>\r\n");
      out.write("        <z:permission value=\"Account:History:List\">\r\n");
      out.write("\t\t\t\t<li class=\" mer-account-search \"><a href=\"merchantaccount_listAccountHistory.action\" class=\"ada-transfer\" >账户明细查询</a></li>\r\n");
      out.write("       </z:permission>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- 我的收款 -->\r\n");
      out.write("            <div class=\"subnav\">\r\n");
      out.write("                <ul>\r\n");
      out.write("              <li class=\"receivable\"></li>\r\n");
      out.write("\t\t\t\t<z:permission value=\"Receive:PaymentOrder:List\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\" mer-receivable-payment \">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"merchantReceivePaymentOrder_listReceivePaymentOrder.action\">支付记录查询</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</z:permission>\r\n");
      out.write("\t\t\t\t<z:permission value=\"Receive:TransferRecord:List\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"mer-receivable-transfer\"><a\r\n");
      out.write("\t\t\t\t\t\t\thref=\"merchantReceiveTransfer_listReceiveTransfer.action\">转账记录查询</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</z:permission>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<z:permission value=\"Receive:RechargeRecord:List\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"mer-receivable-recharge\"><a\r\n");
      out.write("\t\t\t\t\t\t\thref=\"merchantReceiveRecharge_listReceiveRechargeRecord.action\">充值记录查询</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t</z:permission>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- 我的付款 -->\r\n");
      out.write("            <div class=\"subnav\">\r\n");
      out.write("                <ul>\r\n");
      out.write("               <li class=\"payment\"></li>\r\n");
      out.write("\t\t\t\t\t<z:permission value=\"Pay:PaymentOrder:List\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"mer-pay-payment\"><a\r\n");
      out.write("\t\t\t\t\t\t\thref=\"merchantPayPaymentOrder_listPaymentOrder.action\">支付记录查询</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t</z:permission>\r\n");
      out.write("\t\t\t\t\t<z:permission value=\"Pay:TransferRecord:List\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"mer-pay-transfer\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"merchantTransferRecord_listTransfer.action\">转账记录查询</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t</z:permission>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"subnav\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                   <li class=\"mer-security-info\"><a href=\"merchantsecuritycenter_securityCenter.action\">安全中心</a>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"subnav\">\r\n");
      out.write("                <ul>\r\n");
      out.write("               <li class=\"system\"></li>\r\n");
      out.write("                   <z:permission value=\"Pms:Operator:View\">\r\n");
      out.write("\t\t\t\t\t<li class=\"mer-system-operator\"><a href=\"permission_listMerchantOperator.action\">操作员管理</a></li>\r\n");
      out.write("\t\t\t\t\t</z:permission>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"subnav\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                <li class=\"publicinfo\"></li>\r\n");
      out.write("\t\t\t\t\t<z:permission value=\"CommonInfo:Key:View\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"mer-publicinfo-keymanage\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"merchantKey_showMerchantKeyUI.action\">密钥管理</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t</z:permission>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("             </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
